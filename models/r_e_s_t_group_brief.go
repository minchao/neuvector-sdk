// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RESTGroupBrief r e s t group brief
//
// swagger:model RESTGroupBrief
type RESTGroupBrief struct {

	// baseline profile
	// Required: true
	BaselineProfile *string `json:"baseline_profile"`

	// cap change mode
	// Example: false
	CapChangeMode bool `json:"cap_change_mode,omitempty"`

	// cap scorable
	// Example: false
	CapScorable bool `json:"cap_scorable,omitempty"`

	// cfg type
	// Example: ground
	// Required: true
	// Enum: [learned user_created ground federal]
	CfgType *string `json:"cfg_type"`

	// comment
	// Required: true
	Comment *string `json:"comment"`

	// creater domains
	// Required: true
	CreaterDomains []string `json:"creater_domains"`

	// domain
	// Required: true
	Domain *string `json:"domain"`

	// kind
	// Required: true
	Kind *string `json:"kind"`

	// learned
	// Example: true
	// Required: true
	Learned *bool `json:"learned"`

	// name
	// Required: true
	Name *string `json:"name"`

	// not scored
	// Example: true
	// Required: true
	NotScored *bool `json:"not_scored"`

	// platform role
	// Required: true
	PlatformRole *string `json:"platform_role"`

	// policy mode
	PolicyMode string `json:"policy_mode,omitempty"`

	// profile mode
	ProfileMode string `json:"profile_mode,omitempty"`

	// reserved
	// Example: false
	// Required: true
	Reserved *bool `json:"reserved"`
}

// Validate validates this r e s t group brief
func (m *RESTGroupBrief) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBaselineProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCfgType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateComment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreaterDomains(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDomain(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKind(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLearned(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNotScored(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlatformRole(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReserved(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RESTGroupBrief) validateBaselineProfile(formats strfmt.Registry) error {

	if err := validate.Required("baseline_profile", "body", m.BaselineProfile); err != nil {
		return err
	}

	return nil
}

var rESTGroupBriefTypeCfgTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["learned","user_created","ground","federal"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		rESTGroupBriefTypeCfgTypePropEnum = append(rESTGroupBriefTypeCfgTypePropEnum, v)
	}
}

const (

	// RESTGroupBriefCfgTypeLearned captures enum value "learned"
	RESTGroupBriefCfgTypeLearned string = "learned"

	// RESTGroupBriefCfgTypeUserCreated captures enum value "user_created"
	RESTGroupBriefCfgTypeUserCreated string = "user_created"

	// RESTGroupBriefCfgTypeGround captures enum value "ground"
	RESTGroupBriefCfgTypeGround string = "ground"

	// RESTGroupBriefCfgTypeFederal captures enum value "federal"
	RESTGroupBriefCfgTypeFederal string = "federal"
)

// prop value enum
func (m *RESTGroupBrief) validateCfgTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, rESTGroupBriefTypeCfgTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *RESTGroupBrief) validateCfgType(formats strfmt.Registry) error {

	if err := validate.Required("cfg_type", "body", m.CfgType); err != nil {
		return err
	}

	// value enum
	if err := m.validateCfgTypeEnum("cfg_type", "body", *m.CfgType); err != nil {
		return err
	}

	return nil
}

func (m *RESTGroupBrief) validateComment(formats strfmt.Registry) error {

	if err := validate.Required("comment", "body", m.Comment); err != nil {
		return err
	}

	return nil
}

func (m *RESTGroupBrief) validateCreaterDomains(formats strfmt.Registry) error {

	if err := validate.Required("creater_domains", "body", m.CreaterDomains); err != nil {
		return err
	}

	return nil
}

func (m *RESTGroupBrief) validateDomain(formats strfmt.Registry) error {

	if err := validate.Required("domain", "body", m.Domain); err != nil {
		return err
	}

	return nil
}

func (m *RESTGroupBrief) validateKind(formats strfmt.Registry) error {

	if err := validate.Required("kind", "body", m.Kind); err != nil {
		return err
	}

	return nil
}

func (m *RESTGroupBrief) validateLearned(formats strfmt.Registry) error {

	if err := validate.Required("learned", "body", m.Learned); err != nil {
		return err
	}

	return nil
}

func (m *RESTGroupBrief) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *RESTGroupBrief) validateNotScored(formats strfmt.Registry) error {

	if err := validate.Required("not_scored", "body", m.NotScored); err != nil {
		return err
	}

	return nil
}

func (m *RESTGroupBrief) validatePlatformRole(formats strfmt.Registry) error {

	if err := validate.Required("platform_role", "body", m.PlatformRole); err != nil {
		return err
	}

	return nil
}

func (m *RESTGroupBrief) validateReserved(formats strfmt.Registry) error {

	if err := validate.Required("reserved", "body", m.Reserved); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this r e s t group brief based on context it is used
func (m *RESTGroupBrief) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RESTGroupBrief) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RESTGroupBrief) UnmarshalBinary(b []byte) error {
	var res RESTGroupBrief
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
