// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RESTProcessProfileConfigData r e s t process profile config data
//
// swagger:model RESTProcessProfileConfigData
type RESTProcessProfileConfigData struct {

	// process profile config
	// Required: true
	ProcessProfileConfig *RESTProcessProfileConfig `json:"process_profile_config"`
}

// Validate validates this r e s t process profile config data
func (m *RESTProcessProfileConfigData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProcessProfileConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RESTProcessProfileConfigData) validateProcessProfileConfig(formats strfmt.Registry) error {

	if err := validate.Required("process_profile_config", "body", m.ProcessProfileConfig); err != nil {
		return err
	}

	if m.ProcessProfileConfig != nil {
		if err := m.ProcessProfileConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("process_profile_config")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("process_profile_config")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this r e s t process profile config data based on the context it is used
func (m *RESTProcessProfileConfigData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateProcessProfileConfig(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RESTProcessProfileConfigData) contextValidateProcessProfileConfig(ctx context.Context, formats strfmt.Registry) error {

	if m.ProcessProfileConfig != nil {

		if err := m.ProcessProfileConfig.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("process_profile_config")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("process_profile_config")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RESTProcessProfileConfigData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RESTProcessProfileConfigData) UnmarshalBinary(b []byte) error {
	var res RESTProcessProfileConfigData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
