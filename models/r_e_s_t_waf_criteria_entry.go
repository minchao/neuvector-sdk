// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RESTWafCriteriaEntry r e s t waf criteria entry
//
// swagger:model RESTWafCriteriaEntry
type RESTWafCriteriaEntry struct {

	// context
	// Example: packet
	Context string `json:"context,omitempty"`

	// key
	// Example: pattern
	// Required: true
	Key *string `json:"key"`

	// op
	// Example: regex
	// Required: true
	Op *string `json:"op"`

	// value
	// Example: [0-9]
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this r e s t waf criteria entry
func (m *RESTWafCriteriaEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RESTWafCriteriaEntry) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", m.Key); err != nil {
		return err
	}

	return nil
}

func (m *RESTWafCriteriaEntry) validateOp(formats strfmt.Registry) error {

	if err := validate.Required("op", "body", m.Op); err != nil {
		return err
	}

	return nil
}

func (m *RESTWafCriteriaEntry) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this r e s t waf criteria entry based on context it is used
func (m *RESTWafCriteriaEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RESTWafCriteriaEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RESTWafCriteriaEntry) UnmarshalBinary(b []byte) error {
	var res RESTWafCriteriaEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
