// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RESTApikeyGenerated r e s t apikey generated
//
// swagger:model RESTApikeyGenerated
type RESTApikeyGenerated struct {

	// apikey name
	// Example: token-cicd-scan
	// Required: true
	ApikeyName *string `json:"apikey_name"`

	// apikey secret
	// Example: 0u+tVOWNPRfpCK7p9qz
	// Required: true
	ApikeySecret *string `json:"apikey_secret"`
}

// Validate validates this r e s t apikey generated
func (m *RESTApikeyGenerated) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateApikeyName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateApikeySecret(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RESTApikeyGenerated) validateApikeyName(formats strfmt.Registry) error {

	if err := validate.Required("apikey_name", "body", m.ApikeyName); err != nil {
		return err
	}

	return nil
}

func (m *RESTApikeyGenerated) validateApikeySecret(formats strfmt.Registry) error {

	if err := validate.Required("apikey_secret", "body", m.ApikeySecret); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this r e s t apikey generated based on context it is used
func (m *RESTApikeyGenerated) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RESTApikeyGenerated) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RESTApikeyGenerated) UnmarshalBinary(b []byte) error {
	var res RESTApikeyGenerated
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
