// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RESTImportTask r e s t import task
//
// swagger:model RESTImportTask
type RESTImportTask struct {

	// ctrler id
	// Example: 6e60452b244b90456f3450c9fed0a50f57f4b849dcb74a5fad289e8116f32f36
	// Required: true
	CtrlerID *string `json:"ctrler_id"`

	// last update time
	// Example: 2022-03-17T17:31:55.832768041Z
	// Format: date-time
	LastUpdateTime strfmt.DateTime `json:"last_update_time,omitempty"`

	// percentage
	// Example: 100
	// Required: true
	Percentage *int64 `json:"percentage"`

	// status
	// Example: done
	Status string `json:"status,omitempty"`

	// temp token
	TempToken string `json:"temp_token,omitempty"`

	// tid
	// Example: c5af897b62a258212ece91c0551d3a4a
	// Required: true
	Tid *string `json:"tid"`

	// triggered by
	// Example: admin
	TriggeredBy string `json:"triggered_by,omitempty"`
}

// Validate validates this r e s t import task
func (m *RESTImportTask) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCtrlerID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastUpdateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePercentage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RESTImportTask) validateCtrlerID(formats strfmt.Registry) error {

	if err := validate.Required("ctrler_id", "body", m.CtrlerID); err != nil {
		return err
	}

	return nil
}

func (m *RESTImportTask) validateLastUpdateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.LastUpdateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("last_update_time", "body", "date-time", m.LastUpdateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *RESTImportTask) validatePercentage(formats strfmt.Registry) error {

	if err := validate.Required("percentage", "body", m.Percentage); err != nil {
		return err
	}

	return nil
}

func (m *RESTImportTask) validateTid(formats strfmt.Registry) error {

	if err := validate.Required("tid", "body", m.Tid); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this r e s t import task based on context it is used
func (m *RESTImportTask) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RESTImportTask) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RESTImportTask) UnmarshalBinary(b []byte) error {
	var res RESTImportTask
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
