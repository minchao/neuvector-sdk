// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RESTSystemConfigSyslogCfgV2 r e s t system config syslog cfg v2
//
// swagger:model RESTSystemConfigSyslogCfgV2
type RESTSystemConfigSyslogCfgV2 struct {

	// single cve per syslog
	// Example: true
	SingleCvePerSyslog bool `json:"single_cve_per_syslog,omitempty"`

	// syslog categories
	// Example: ["event","violation","threat","incident"]
	SyslogCategories []string `json:"syslog_categories"`

	// syslog cve in layers
	// Example: true
	SyslogCveInLayers bool `json:"syslog_cve_in_layers,omitempty"`

	// syslog in json
	// Example: true
	SyslogInJSON bool `json:"syslog_in_json,omitempty"`

	// syslog ip
	SyslogIP string `json:"syslog_ip,omitempty"`

	// syslog ip proto
	// Example: 6
	SyslogIPProto uint8 `json:"syslog_ip_proto,omitempty"`

	// syslog level
	// Example: INFO
	SyslogLevel string `json:"syslog_level,omitempty"`

	// syslog port
	// Example: 514
	SyslogPort uint16 `json:"syslog_port,omitempty"`

	// syslog server cert
	// Example: E7B0OS/N3KMVCL6KNMZ2+LOV90S7854NSD84P0BF
	SyslogServerCert string `json:"syslog_server_cert,omitempty"`

	// syslog status
	// Example: true
	SyslogStatus bool `json:"syslog_status,omitempty"`
}

// Validate validates this r e s t system config syslog cfg v2
func (m *RESTSystemConfigSyslogCfgV2) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this r e s t system config syslog cfg v2 based on context it is used
func (m *RESTSystemConfigSyslogCfgV2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RESTSystemConfigSyslogCfgV2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RESTSystemConfigSyslogCfgV2) UnmarshalBinary(b []byte) error {
	var res RESTSystemConfigSyslogCfgV2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
