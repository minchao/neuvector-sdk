// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RESTSystemConfigAuthV2 r e s t system config auth v2
//
// swagger:model RESTSystemConfigAuthV2
type RESTSystemConfigAuthV2 struct {

	// auth by platform
	// Example: true
	// Required: true
	AuthByPlatform *bool `json:"auth_by_platform"`

	// auth order
	// Example: ["local","ldap"]
	// Required: true
	AuthOrder []string `json:"auth_order"`

	// rancher ep
	// Required: true
	RancherEp *string `json:"rancher_ep"`
}

// Validate validates this r e s t system config auth v2
func (m *RESTSystemConfigAuthV2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAuthByPlatform(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAuthOrder(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRancherEp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RESTSystemConfigAuthV2) validateAuthByPlatform(formats strfmt.Registry) error {

	if err := validate.Required("auth_by_platform", "body", m.AuthByPlatform); err != nil {
		return err
	}

	return nil
}

func (m *RESTSystemConfigAuthV2) validateAuthOrder(formats strfmt.Registry) error {

	if err := validate.Required("auth_order", "body", m.AuthOrder); err != nil {
		return err
	}

	return nil
}

func (m *RESTSystemConfigAuthV2) validateRancherEp(formats strfmt.Registry) error {

	if err := validate.Required("rancher_ep", "body", m.RancherEp); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this r e s t system config auth v2 based on context it is used
func (m *RESTSystemConfigAuthV2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RESTSystemConfigAuthV2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RESTSystemConfigAuthV2) UnmarshalBinary(b []byte) error {
	var res RESTSystemConfigAuthV2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
