// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RESTSystemConfigIBMSAV2 r e s t system config i b m s a v2
//
// swagger:model RESTSystemConfigIBMSAV2
type RESTSystemConfigIBMSAV2 struct {

	// ibmsa ep connected at
	// Required: true
	IbmsaEpConnectedAt *string `json:"ibmsa_ep_connected_at"`

	// ibmsa ep dashboard url
	// Required: true
	IbmsaEpDashboardURL *string `json:"ibmsa_ep_dashboard_url"`

	// ibmsa ep enabled
	// Example: false
	// Required: true
	IbmsaEpEnabled *bool `json:"ibmsa_ep_enabled"`

	// ibmsa ep start
	// Example: 1
	// Required: true
	IbmsaEpStart *uint32 `json:"ibmsa_ep_start"`
}

// Validate validates this r e s t system config i b m s a v2
func (m *RESTSystemConfigIBMSAV2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIbmsaEpConnectedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIbmsaEpDashboardURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIbmsaEpEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIbmsaEpStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RESTSystemConfigIBMSAV2) validateIbmsaEpConnectedAt(formats strfmt.Registry) error {

	if err := validate.Required("ibmsa_ep_connected_at", "body", m.IbmsaEpConnectedAt); err != nil {
		return err
	}

	return nil
}

func (m *RESTSystemConfigIBMSAV2) validateIbmsaEpDashboardURL(formats strfmt.Registry) error {

	if err := validate.Required("ibmsa_ep_dashboard_url", "body", m.IbmsaEpDashboardURL); err != nil {
		return err
	}

	return nil
}

func (m *RESTSystemConfigIBMSAV2) validateIbmsaEpEnabled(formats strfmt.Registry) error {

	if err := validate.Required("ibmsa_ep_enabled", "body", m.IbmsaEpEnabled); err != nil {
		return err
	}

	return nil
}

func (m *RESTSystemConfigIBMSAV2) validateIbmsaEpStart(formats strfmt.Registry) error {

	if err := validate.Required("ibmsa_ep_start", "body", m.IbmsaEpStart); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this r e s t system config i b m s a v2 based on context it is used
func (m *RESTSystemConfigIBMSAV2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RESTSystemConfigIBMSAV2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RESTSystemConfigIBMSAV2) UnmarshalBinary(b []byte) error {
	var res RESTSystemConfigIBMSAV2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
