// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RESTMappableRoles r e s t mappable roles
//
// swagger:model RESTMappableRoles
type RESTMappableRoles struct {

	// default roles
	// Example: ["default_role_1","default_role_2"]
	// Required: true
	DefaultRoles []string `json:"default_roles"`

	// group domain roles
	// Example: ["group_domain_role_1","group_domain_role_2"]
	// Required: true
	GroupDomainRoles []string `json:"group_domain_roles"`

	// group roles
	// Example: ["group_role_1","group_role_2"]
	// Required: true
	GroupRoles []string `json:"group_roles"`
}

// Validate validates this r e s t mappable roles
func (m *RESTMappableRoles) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefaultRoles(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGroupDomainRoles(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGroupRoles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RESTMappableRoles) validateDefaultRoles(formats strfmt.Registry) error {

	if err := validate.Required("default_roles", "body", m.DefaultRoles); err != nil {
		return err
	}

	return nil
}

func (m *RESTMappableRoles) validateGroupDomainRoles(formats strfmt.Registry) error {

	if err := validate.Required("group_domain_roles", "body", m.GroupDomainRoles); err != nil {
		return err
	}

	return nil
}

func (m *RESTMappableRoles) validateGroupRoles(formats strfmt.Registry) error {

	if err := validate.Required("group_roles", "body", m.GroupRoles); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this r e s t mappable roles based on context it is used
func (m *RESTMappableRoles) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RESTMappableRoles) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RESTMappableRoles) UnmarshalBinary(b []byte) error {
	var res RESTMappableRoles
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
