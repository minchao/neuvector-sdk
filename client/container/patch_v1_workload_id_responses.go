// Code generated by go-swagger; DO NOT EDIT.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PatchV1WorkloadIDReader is a Reader for the PatchV1WorkloadID structure.
type PatchV1WorkloadIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchV1WorkloadIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchV1WorkloadIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[PATCH /v1/workload/{id}] PatchV1WorkloadID", response, response.Code())
	}
}

// NewPatchV1WorkloadIDOK creates a PatchV1WorkloadIDOK with default headers values
func NewPatchV1WorkloadIDOK() *PatchV1WorkloadIDOK {
	return &PatchV1WorkloadIDOK{}
}

/*
PatchV1WorkloadIDOK describes a response with status code 200, with default header values.

Success
*/
type PatchV1WorkloadIDOK struct {
}

// IsSuccess returns true when this patch v1 workload Id o k response has a 2xx status code
func (o *PatchV1WorkloadIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch v1 workload Id o k response has a 3xx status code
func (o *PatchV1WorkloadIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch v1 workload Id o k response has a 4xx status code
func (o *PatchV1WorkloadIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch v1 workload Id o k response has a 5xx status code
func (o *PatchV1WorkloadIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch v1 workload Id o k response a status code equal to that given
func (o *PatchV1WorkloadIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the patch v1 workload Id o k response
func (o *PatchV1WorkloadIDOK) Code() int {
	return 200
}

func (o *PatchV1WorkloadIDOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/workload/{id}][%d] patchV1WorkloadIdOK ", 200)
}

func (o *PatchV1WorkloadIDOK) String() string {
	return fmt.Sprintf("[PATCH /v1/workload/{id}][%d] patchV1WorkloadIdOK ", 200)
}

func (o *PatchV1WorkloadIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
