// Code generated by go-swagger; DO NOT EDIT.

package response_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteV1ResponseRuleIDReader is a Reader for the DeleteV1ResponseRuleID structure.
type DeleteV1ResponseRuleIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteV1ResponseRuleIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteV1ResponseRuleIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/response/rule/{id}] DeleteV1ResponseRuleID", response, response.Code())
	}
}

// NewDeleteV1ResponseRuleIDOK creates a DeleteV1ResponseRuleIDOK with default headers values
func NewDeleteV1ResponseRuleIDOK() *DeleteV1ResponseRuleIDOK {
	return &DeleteV1ResponseRuleIDOK{}
}

/*
DeleteV1ResponseRuleIDOK describes a response with status code 200, with default header values.

Success
*/
type DeleteV1ResponseRuleIDOK struct {
}

// IsSuccess returns true when this delete v1 response rule Id o k response has a 2xx status code
func (o *DeleteV1ResponseRuleIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete v1 response rule Id o k response has a 3xx status code
func (o *DeleteV1ResponseRuleIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete v1 response rule Id o k response has a 4xx status code
func (o *DeleteV1ResponseRuleIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete v1 response rule Id o k response has a 5xx status code
func (o *DeleteV1ResponseRuleIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete v1 response rule Id o k response a status code equal to that given
func (o *DeleteV1ResponseRuleIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete v1 response rule Id o k response
func (o *DeleteV1ResponseRuleIDOK) Code() int {
	return 200
}

func (o *DeleteV1ResponseRuleIDOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/response/rule/{id}][%d] deleteV1ResponseRuleIdOK ", 200)
}

func (o *DeleteV1ResponseRuleIDOK) String() string {
	return fmt.Sprintf("[DELETE /v1/response/rule/{id}][%d] deleteV1ResponseRuleIdOK ", 200)
}

func (o *DeleteV1ResponseRuleIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
