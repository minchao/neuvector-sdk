// Code generated by go-swagger; DO NOT EDIT.

package file_monitor

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetV1FileMonitorParams creates a new GetV1FileMonitorParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetV1FileMonitorParams() *GetV1FileMonitorParams {
	return &GetV1FileMonitorParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetV1FileMonitorParamsWithTimeout creates a new GetV1FileMonitorParams object
// with the ability to set a timeout on a request.
func NewGetV1FileMonitorParamsWithTimeout(timeout time.Duration) *GetV1FileMonitorParams {
	return &GetV1FileMonitorParams{
		timeout: timeout,
	}
}

// NewGetV1FileMonitorParamsWithContext creates a new GetV1FileMonitorParams object
// with the ability to set a context for a request.
func NewGetV1FileMonitorParamsWithContext(ctx context.Context) *GetV1FileMonitorParams {
	return &GetV1FileMonitorParams{
		Context: ctx,
	}
}

// NewGetV1FileMonitorParamsWithHTTPClient creates a new GetV1FileMonitorParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetV1FileMonitorParamsWithHTTPClient(client *http.Client) *GetV1FileMonitorParams {
	return &GetV1FileMonitorParams{
		HTTPClient: client,
	}
}

/*
GetV1FileMonitorParams contains all the parameters to send to the API endpoint

	for the get v1 file monitor operation.

	Typically these are written to a http.Request.
*/
type GetV1FileMonitorParams struct {

	// XAuthToken.
	XAuthToken string

	/* Scope.

	   When set to fed, returned fed file monitor list. When set to local, returned local file monitor list. If there is no query string 'scope', all file monitor list will be returned.
	*/
	Scope *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get v1 file monitor params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1FileMonitorParams) WithDefaults() *GetV1FileMonitorParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get v1 file monitor params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetV1FileMonitorParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get v1 file monitor params
func (o *GetV1FileMonitorParams) WithTimeout(timeout time.Duration) *GetV1FileMonitorParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v1 file monitor params
func (o *GetV1FileMonitorParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v1 file monitor params
func (o *GetV1FileMonitorParams) WithContext(ctx context.Context) *GetV1FileMonitorParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v1 file monitor params
func (o *GetV1FileMonitorParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v1 file monitor params
func (o *GetV1FileMonitorParams) WithHTTPClient(client *http.Client) *GetV1FileMonitorParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v1 file monitor params
func (o *GetV1FileMonitorParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXAuthToken adds the xAuthToken to the get v1 file monitor params
func (o *GetV1FileMonitorParams) WithXAuthToken(xAuthToken string) *GetV1FileMonitorParams {
	o.SetXAuthToken(xAuthToken)
	return o
}

// SetXAuthToken adds the xAuthToken to the get v1 file monitor params
func (o *GetV1FileMonitorParams) SetXAuthToken(xAuthToken string) {
	o.XAuthToken = xAuthToken
}

// WithScope adds the scope to the get v1 file monitor params
func (o *GetV1FileMonitorParams) WithScope(scope *string) *GetV1FileMonitorParams {
	o.SetScope(scope)
	return o
}

// SetScope adds the scope to the get v1 file monitor params
func (o *GetV1FileMonitorParams) SetScope(scope *string) {
	o.Scope = scope
}

// WriteToRequest writes these params to a swagger request
func (o *GetV1FileMonitorParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param X-Auth-Token
	if err := r.SetHeaderParam("X-Auth-Token", o.XAuthToken); err != nil {
		return err
	}

	if o.Scope != nil {

		// query param scope
		var qrScope string

		if o.Scope != nil {
			qrScope = *o.Scope
		}
		qScope := qrScope
		if qScope != "" {

			if err := r.SetQueryParam("scope", qScope); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
