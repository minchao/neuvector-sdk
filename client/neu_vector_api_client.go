// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/minchao/neuvector-sdk/client/admission"
	"github.com/minchao/neuvector-sdk/client/apikey"
	"github.com/minchao/neuvector-sdk/client/authentication"
	"github.com/minchao/neuvector-sdk/client/compliance"
	"github.com/minchao/neuvector-sdk/client/container"
	"github.com/minchao/neuvector-sdk/client/controller"
	"github.com/minchao/neuvector-sdk/client/d_l_p"
	"github.com/minchao/neuvector-sdk/client/e_u_l_a"
	"github.com/minchao/neuvector-sdk/client/enforcer"
	"github.com/minchao/neuvector-sdk/client/federation"
	"github.com/minchao/neuvector-sdk/client/file"
	"github.com/minchao/neuvector-sdk/client/file_monitor"
	"github.com/minchao/neuvector-sdk/client/group"
	"github.com/minchao/neuvector-sdk/client/host"
	logops "github.com/minchao/neuvector-sdk/client/log"
	"github.com/minchao/neuvector-sdk/client/namespace"
	"github.com/minchao/neuvector-sdk/client/policy"
	"github.com/minchao/neuvector-sdk/client/process"
	"github.com/minchao/neuvector-sdk/client/response_rule"
	"github.com/minchao/neuvector-sdk/client/scan"
	serverops "github.com/minchao/neuvector-sdk/client/server"
	"github.com/minchao/neuvector-sdk/client/service"
	"github.com/minchao/neuvector-sdk/client/sniffer"
	"github.com/minchao/neuvector-sdk/client/system"
	"github.com/minchao/neuvector-sdk/client/user"
	"github.com/minchao/neuvector-sdk/client/vulnerability"
	"github.com/minchao/neuvector-sdk/client/w_a_f_rule"
)

// Default neu vector API HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new neu vector API HTTP client.
func NewHTTPClient(formats strfmt.Registry) *NeuVectorAPI {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new neu vector API HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *NeuVectorAPI {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new neu vector API client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *NeuVectorAPI {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(NeuVectorAPI)
	cli.Transport = transport
	cli.Admission = admission.New(transport, formats)
	cli.Apikey = apikey.New(transport, formats)
	cli.Authentication = authentication.New(transport, formats)
	cli.Compliance = compliance.New(transport, formats)
	cli.Container = container.New(transport, formats)
	cli.Controller = controller.New(transport, formats)
	cli.Dlp = d_l_p.New(transport, formats)
	cli.Eula = e_u_l_a.New(transport, formats)
	cli.Enforcer = enforcer.New(transport, formats)
	cli.Federation = federation.New(transport, formats)
	cli.File = file.New(transport, formats)
	cli.FileMonitor = file_monitor.New(transport, formats)
	cli.Group = group.New(transport, formats)
	cli.Host = host.New(transport, formats)
	cli.Log = logops.New(transport, formats)
	cli.Namespace = namespace.New(transport, formats)
	cli.Policy = policy.New(transport, formats)
	cli.Process = process.New(transport, formats)
	cli.ResponseRule = response_rule.New(transport, formats)
	cli.Scan = scan.New(transport, formats)
	cli.Server = serverops.New(transport, formats)
	cli.Service = service.New(transport, formats)
	cli.Sniffer = sniffer.New(transport, formats)
	cli.System = system.New(transport, formats)
	cli.User = user.New(transport, formats)
	cli.Vulnerability = vulnerability.New(transport, formats)
	cli.WafRule = w_a_f_rule.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// NeuVectorAPI is a client for neu vector API
type NeuVectorAPI struct {
	Admission admission.ClientService

	Apikey apikey.ClientService

	Authentication authentication.ClientService

	Compliance compliance.ClientService

	Container container.ClientService

	Controller controller.ClientService

	Dlp d_l_p.ClientService

	Eula e_u_l_a.ClientService

	Enforcer enforcer.ClientService

	Federation federation.ClientService

	File file.ClientService

	FileMonitor file_monitor.ClientService

	Group group.ClientService

	Host host.ClientService

	Log logops.ClientService

	Namespace namespace.ClientService

	Policy policy.ClientService

	Process process.ClientService

	ResponseRule response_rule.ClientService

	Scan scan.ClientService

	Server serverops.ClientService

	Service service.ClientService

	Sniffer sniffer.ClientService

	System system.ClientService

	User user.ClientService

	Vulnerability vulnerability.ClientService

	WafRule w_a_f_rule.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *NeuVectorAPI) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Admission.SetTransport(transport)
	c.Apikey.SetTransport(transport)
	c.Authentication.SetTransport(transport)
	c.Compliance.SetTransport(transport)
	c.Container.SetTransport(transport)
	c.Controller.SetTransport(transport)
	c.Dlp.SetTransport(transport)
	c.Eula.SetTransport(transport)
	c.Enforcer.SetTransport(transport)
	c.Federation.SetTransport(transport)
	c.File.SetTransport(transport)
	c.FileMonitor.SetTransport(transport)
	c.Group.SetTransport(transport)
	c.Host.SetTransport(transport)
	c.Log.SetTransport(transport)
	c.Namespace.SetTransport(transport)
	c.Policy.SetTransport(transport)
	c.Process.SetTransport(transport)
	c.ResponseRule.SetTransport(transport)
	c.Scan.SetTransport(transport)
	c.Server.SetTransport(transport)
	c.Service.SetTransport(transport)
	c.Sniffer.SetTransport(transport)
	c.System.SetTransport(transport)
	c.User.SetTransport(transport)
	c.Vulnerability.SetTransport(transport)
	c.WafRule.SetTransport(transport)
}
