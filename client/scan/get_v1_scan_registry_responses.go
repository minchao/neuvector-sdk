// Code generated by go-swagger; DO NOT EDIT.

package scan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/minchao/neuvector-sdk/models"
)

// GetV1ScanRegistryReader is a Reader for the GetV1ScanRegistry structure.
type GetV1ScanRegistryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1ScanRegistryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1ScanRegistryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /v1/scan/registry] GetV1ScanRegistry", response, response.Code())
	}
}

// NewGetV1ScanRegistryOK creates a GetV1ScanRegistryOK with default headers values
func NewGetV1ScanRegistryOK() *GetV1ScanRegistryOK {
	return &GetV1ScanRegistryOK{}
}

/*
GetV1ScanRegistryOK describes a response with status code 200, with default header values.

Success
*/
type GetV1ScanRegistryOK struct {
	Payload *models.RESTRegistrySummaryListData
}

// IsSuccess returns true when this get v1 scan registry o k response has a 2xx status code
func (o *GetV1ScanRegistryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 scan registry o k response has a 3xx status code
func (o *GetV1ScanRegistryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 scan registry o k response has a 4xx status code
func (o *GetV1ScanRegistryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 scan registry o k response has a 5xx status code
func (o *GetV1ScanRegistryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 scan registry o k response a status code equal to that given
func (o *GetV1ScanRegistryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 scan registry o k response
func (o *GetV1ScanRegistryOK) Code() int {
	return 200
}

func (o *GetV1ScanRegistryOK) Error() string {
	return fmt.Sprintf("[GET /v1/scan/registry][%d] getV1ScanRegistryOK  %+v", 200, o.Payload)
}

func (o *GetV1ScanRegistryOK) String() string {
	return fmt.Sprintf("[GET /v1/scan/registry][%d] getV1ScanRegistryOK  %+v", 200, o.Payload)
}

func (o *GetV1ScanRegistryOK) GetPayload() *models.RESTRegistrySummaryListData {
	return o.Payload
}

func (o *GetV1ScanRegistryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RESTRegistrySummaryListData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
