// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/minchao/neuvector-sdk/models"
)

// NewPatchV1SystemConfigWebhookNameParams creates a new PatchV1SystemConfigWebhookNameParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchV1SystemConfigWebhookNameParams() *PatchV1SystemConfigWebhookNameParams {
	return &PatchV1SystemConfigWebhookNameParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchV1SystemConfigWebhookNameParamsWithTimeout creates a new PatchV1SystemConfigWebhookNameParams object
// with the ability to set a timeout on a request.
func NewPatchV1SystemConfigWebhookNameParamsWithTimeout(timeout time.Duration) *PatchV1SystemConfigWebhookNameParams {
	return &PatchV1SystemConfigWebhookNameParams{
		timeout: timeout,
	}
}

// NewPatchV1SystemConfigWebhookNameParamsWithContext creates a new PatchV1SystemConfigWebhookNameParams object
// with the ability to set a context for a request.
func NewPatchV1SystemConfigWebhookNameParamsWithContext(ctx context.Context) *PatchV1SystemConfigWebhookNameParams {
	return &PatchV1SystemConfigWebhookNameParams{
		Context: ctx,
	}
}

// NewPatchV1SystemConfigWebhookNameParamsWithHTTPClient creates a new PatchV1SystemConfigWebhookNameParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchV1SystemConfigWebhookNameParamsWithHTTPClient(client *http.Client) *PatchV1SystemConfigWebhookNameParams {
	return &PatchV1SystemConfigWebhookNameParams{
		HTTPClient: client,
	}
}

/*
PatchV1SystemConfigWebhookNameParams contains all the parameters to send to the API endpoint

	for the patch v1 system config webhook name operation.

	Typically these are written to a http.Request.
*/
type PatchV1SystemConfigWebhookNameParams struct {

	// XAuthToken.
	XAuthToken string

	/* Body.

	   System configure data
	*/
	Body *models.RESTSystemWebhookConfigData

	/* Name.

	   System webhook name
	*/
	Name string

	/* Scope.

	   When set the scope to be fed, it will update the fed level webhook. When set the scope to be local, it will update the local webhook. If there is no query string 'scope', it will use 'local' as the default value.
	*/
	Scope *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch v1 system config webhook name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1SystemConfigWebhookNameParams) WithDefaults() *PatchV1SystemConfigWebhookNameParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch v1 system config webhook name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchV1SystemConfigWebhookNameParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) WithTimeout(timeout time.Duration) *PatchV1SystemConfigWebhookNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) WithContext(ctx context.Context) *PatchV1SystemConfigWebhookNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) WithHTTPClient(client *http.Client) *PatchV1SystemConfigWebhookNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXAuthToken adds the xAuthToken to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) WithXAuthToken(xAuthToken string) *PatchV1SystemConfigWebhookNameParams {
	o.SetXAuthToken(xAuthToken)
	return o
}

// SetXAuthToken adds the xAuthToken to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) SetXAuthToken(xAuthToken string) {
	o.XAuthToken = xAuthToken
}

// WithBody adds the body to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) WithBody(body *models.RESTSystemWebhookConfigData) *PatchV1SystemConfigWebhookNameParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) SetBody(body *models.RESTSystemWebhookConfigData) {
	o.Body = body
}

// WithName adds the name to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) WithName(name string) *PatchV1SystemConfigWebhookNameParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) SetName(name string) {
	o.Name = name
}

// WithScope adds the scope to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) WithScope(scope *string) *PatchV1SystemConfigWebhookNameParams {
	o.SetScope(scope)
	return o
}

// SetScope adds the scope to the patch v1 system config webhook name params
func (o *PatchV1SystemConfigWebhookNameParams) SetScope(scope *string) {
	o.Scope = scope
}

// WriteToRequest writes these params to a swagger request
func (o *PatchV1SystemConfigWebhookNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param X-Auth-Token
	if err := r.SetHeaderParam("X-Auth-Token", o.XAuthToken); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if o.Scope != nil {

		// query param scope
		var qrScope string

		if o.Scope != nil {
			qrScope = *o.Scope
		}
		qScope := qrScope
		if qScope != "" {

			if err := r.SetQueryParam("scope", qScope); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
